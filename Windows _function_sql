-- Active: 1735540108712@@127.0.0.1@3306@college
SELECT *FROM EMP;
CREATE DATABASE school;

USE  school;

CREATE TABLE students
(student_id int not null,score int not null);

INSERT INTO students
(student_id,score)
VALUES
(1,90),
(2,80),
(3,90),
(4,95);

SELECT*FROM students;

-- PERCENT RANK
SELECT student_id,score,
PERCENT_RANK() OVER(ORDER BY score) AS PR
FROM students;



-- CUMMULATIVE DISTRIBUTION

SELECT student_id,score,
CUME_DIST() OVER(ORDER BY score) AS CD 
FROM students;

-- NTILE

CREATE TABLE sales
(SALE_ID INT NOT NULL,
AMOUNT INT NOT NULL);

INSERT INTO sales
(SALE_ID,AMOUNT)
VALUES
(1,100),
(2,200),
(3,300),
(4,400),
(5,500),
(6,600),
(7,700);

SELECT*FROM sales;

-- NTILE
SELECT sale_id,amount,
NTILE(3) OVER(ORDER BY amount) AS NTILE_GROUP
FROM sales;

USE join_sql;
SELECT*FROM EMP;

-- FIRST_NAME 
SELECT * ,
FIRST_VALUE(SAL) OVER(ORDER BY SAL DESC) AS HIGHEST_SALARY
FROM EMP;

-- LAST_VALUE 
SELECT EMPNO,ENAME,SAL,
LAST_VALUE(SAL) OVER(ORDER BY SAL ASC) AS LOWEST_SALARY
FROM EMP;

-- NTH VALUE 
USE school;
SELECT*FROM sales;
SELECT *,
NTH_VALUE(sale_id,2) OVER(ORDER BY AMOUNT DESC) AS NTH_TITLE
FROM SALES;

-- LEAD 
CREATE TABLE MONTHLY_SALE(MONTH VARCHAR(30) NOT NULL,SALES INT NOT NULL);

INSERT INTO MONTHLY_SALE
(MONTH,SALES)
VALUES 
("JANUARY",1000),
("FEBRUARY",1200),
("MARCH",1300),
("APRIL",1400);

SELECT*FROM MONTHLY_SALE;

SELECT*,
LEAD(SALES,2) OVER(ORDER BY MONTH) AS NEXT_MONTH_SALES
FROM MONTHLY_SALE;

SELECT*,
LAG(SALES,1) OVER(ORDER BY MONTH) AS PREVIOUS_MONTH
FROM MONTHLY_SALE;

