CREATE DATABASE class;
USE class;

SELECT*FROM STUDENTS;

CREATE TABLE students (
    student_id INT AUTO_INCREMENT PRIMARY KEY,
    name VARCHAR(100) NOT NULL,
    subject VARCHAR(100) NOT NULL,
    marks INT NOT NULL,
    grade CHAR(1) NOT NULL
);

INSERT INTO students (name, subject, marks, grade) VALUES
('John Doe', 'Mathematics', 85, 'A'),
('Jane Smith', 'Physics', 90, 'A'),
('Emily Johnson', 'Chemistry', 78, 'B'),
('Michael Brown', 'Biology', 88, 'A'),
('Sarah Davis', 'History', 92, 'A'),
('David Wilson', 'Geography', 70, 'C'),
('Emma Garcia', 'English', 80, 'B'),
('James Martinez', 'Mathematics', 65, 'D'),
('Sophia Anderson', 'Physics', 75, 'B'),
('Liam Thomas', 'Chemistry', 55, 'F'),
('Olivia Lee', 'Biology', 87, 'A'),
('Noah Harris', 'History', 82, 'B'),
('Isabella Clark', 'Geography', 95, 'A'),
('Mason Walker', 'English', 68, 'C'),
('Ava Young', 'Mathematics', 73, 'B'),
('Logan Hernandez', 'Physics', 61, 'D'),
('Ethan King', 'Chemistry', 79, 'B'),
('Mia Wright', 'Biology', 84, 'B'),
('Lucas Scott', 'History', 89, 'A'),
('Charlotte Adams', 'Geography', 77, 'B');
SELECT*FROM STUDENTS;

-- CALCULATE THE AVERAGE MARKS OF EACH STUDENT ACROSS ALL SUBJECT.
SELECT STUDENT_ID,
NAME,
SUBJECT,
GRADE,
AVG(MARKS) OVER (PARTITION BY SUBJECT) AS AVG_MARKS
FROM STUDENTS;

-- FIND RANK OF STUDENT ACCORDING TO MARKS.
SELECT STUDENT_ID,
NAME,
SUBJECT,
MARKS,
RANK() OVER (PARTITION BY SUBJECT ORDER BY MARKS DESC) AS MARKS_RANK
FROM STUDENTS;

-- FIND DENSE_RANK OF STUDENT ACCORDING TO MARKS.
SELECT STUDENT_ID,
NAME,
SUBJECT,
MARKS,
DENSE_RANK() OVER(PARTITION BY SUBJECT ORDER BY MARKS DESC) AS DENSERANK
FROM STUDENTS;


USE Windows_function;
SELECT*FROM EMPLOYEES;

-- CALCULATE MIN AND MAX SALARY FROM EACH DEPARTMENTS.
SELECT EMPLOYEE_ID,
DEPARTMENT_ID,
NAME,
SALARY,
MIN(SALARY) OVER (PARTITION BY DEPARTMENT_ID) AS MIN_SALARY,
MAX(SALARY) OVER (PARTITION BY DEPARTMENT_ID) AS MAX_SALARY
FROM EMPLOYEES;

-- CALCULATE NUMBER OF EMPLOYEE IN EACH DEPARTMENT.
SELECT EMPLOYEE_ID,
DEPARTMENT_ID,
NAME,
SALARY,
COUNT(*) OVER (PARTITION BY DEPARTMENT_ID) AS COUNT_EMPLOYEE
FROM EMPLOYEES;

SELECT DEPARTMENT_ID,COUNT(EMPLOYEE_ID)
FROM EMPLOYEES
GROUP BY DEPARTMENT_ID;

-- AVERAGE SALARY WITHIN EACH DEPARTMENT.
SELECT DEPARTMENT_ID,
AVG(SALARY) OVER (PARTITION BY DEPARTMENT_ID) AS AVG_DEPARTMENT_ID
FROM EMPLOYEES;

-- FIND ROW_NUMBER BY DEPARTMENT NUMBER.
SELECT EMPLOYEE_ID,
ROW_NUMBER() OVER (PARTITION BY DEPARTMENT_ID) AS ROWNUMBER
FROM EMPLOYEES;

-- FIND THE RANKING FOR EACH DEPARTMENT ORDER BY SALARY.
SELECT DEPARTMENT_ID,
NAME,
SALARY,
RANK() OVER (PARTITION BY DEPARTMENT_ID ORDER BY SALARY) AS RANK_SALARY
FROM EMPLOYEES;


-- EMPLOYEES HAVING SAME SALARY AS THE DEPARTMENTS MAXIMUM SALARY.
SELECT EMPLOYEE_ID,
NAME,
SALARY
FROM(SELECT EMPLOYEE_ID,NAME,SALARY,
			MAX(SALARY) OVER (PARTITION BY DEPARTMENT_ID) AS MAX_SALARY
            FROM EMPLOYEES) AS SUBQUERY
            WHERE SALARY=MAX_SALARY;




